@using OrchardCore.ContentManagement.Metadata.Models

@model Etch.OrchardCore.Blocks.ViewModels.EditBlockBodyPartViewModel

@inject OrchardCore.Environment.Shell.IShellFeaturesManager ShellFeaturesManager

@{
    var isEditorJSEnabled = (await ShellFeaturesManager.GetEnabledFeaturesAsync()).Any(x => x.Id == "StatCan.OrchardCore.Blocks.EditorJS");

    var typeName = Model.TypePartDefinition.ContentTypeDefinition.Name;
    var partName = Model.TypePartDefinition.Name;
    var tenantPath = Context.Request.PathBase.ToString();
}

@if (isEditorJSEnabled)
{
    <script asp-src="~/OrchardCore.Media/Scripts/media.js" asp-name="media" at="Foot" depends-on="admin, vuejs, sortable, vuedraggable"></script>
    <style asp-src="~/OrchardCore.Media/Styles/media.min.css" debug-src="~/OrchardCore.Media/Styles/media.css"></style>
    <script asp-src="https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.min.js" debug-src="https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.js" asp-name="vuejs" at="Foot"></script>
    <script asp-src="https://cdn.jsdelivr.net/sortable/1.4.2/Sortable.min.js" debug-src="https://cdn.jsdelivr.net/sortable/1.4.2/Sortable.js" asp-name="sortable" at="Foot"></script>
    <script asp-src="https://cdn.jsdelivr.net/npm/vuedraggable@2.23.0/dist/vuedraggable.umd.min.js" debug-src="https://cdn.jsdelivr.net/npm/vuedraggable@2.23.0/dist/vuedraggable.umd.js" asp-name="vuedraggable" depends-on="vuejs, sortable" at="Foot"></script>

    <script asp-src="~/StatCan.OrchardCore.Blocks/Scripts/editorjs/admin.js" asp-append-version="true" at="Foot"></script>
    <style asp-src="~/StatCan.OrchardCore.Blocks/Styles/editorjs/admin.css" asp-append-version="true" at="Foot"></style>

    <script at="Foot">
        initializeMediaApplication(false, '@Url.Action("MediaApplication", "Admin", new { area = "OrchardCore.Media" })');
        initializeEditorJS('@tenantPath', '@Html.IdFor(m => m)', '@Html.IdFor(m => m.Data)', '@typeName', '@partName', '');
    </script>

    <fieldset class="form-group">
        <div id="@Html.IdFor(m => m)"></div>
        @Html.HiddenFor(m => m.Data)
    </fieldset>

    <div class="modal" id="@Html.IdFor(m => m)-ModalBody">
        <div class="modal-dialog modal-lg media-modal" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@T["Select Media"]</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body"></div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-primary mediaFieldSelectButton">@T["OK"]</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">@T["Cancel"]</button>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <fieldset class="form-group">
        <textarea asp-for="Data" rows="5" class="form-control content-preview-text"></textarea>
    </fieldset>
}
