@model StatCan.OrchardCore.GitHub.ViewModels.CreateIssueTaskViewModel

<div class="form-group" asp-validation-class-for="TokenName">
  @await Component.InvokeAsync("SelectToken", new { htmlName = Html.NameFor(m => m.TokenName), selectedTokenName = Model.TokenName })
  <span asp-validation-for="TokenName"></span>
  <span class="hint">@T["The token to use when interacting with the github api"]</span>
</div>

<div class="form-group" asp-validation-class-for="Owner">
  <label asp-for="Owner">@T["Owner"]</label>
  <input type="text" asp-for="Owner" class="form-control code" />
  <span asp-validation-for="Owner"></span>
  <span class="hint">@T["The owner (or organization) of the repository. With Liquid support."]</span>
</div>

<div class="form-group" asp-validation-class-for="Repo">
  <label asp-for="Repo">@T["Repository"]</label>
  <input type="text" asp-for="Repo" class="form-control code" />
  <span asp-validation-for="Repo"></span>
  <span class="hint">@T["The name of the repository. With Liquid support."]</span>
</div>

<div class="form-group" asp-validation-class-for="Title">
  <label asp-for="Title">@T["Title"]</label>
  <input type="text" asp-for="Title" class="form-control code" />
  <span asp-validation-for="Title"></span>
  <span class="hint">@T["The title of the issue. With Liquid support."]</span>
</div>

<div class="form-group" asp-validation-class-for="Description">
  <label asp-for="Description">@T["Description"]</label>
  <textarea asp-for="Description"></textarea>
  <span asp-validation-for="Description"></span>
  <span class="hint">@T["Issue description supports GitHub flavored markdown. With Liquid support."]</span>
</div>

<div class="form-group" asp-validation-class-for="Labels">
  <label asp-for="Labels">@T["Labels"]</label>
  <input type="text" asp-for="Labels" class="form-control code" />
  <span asp-validation-for="Labels"></span>
  <span class="hint">@T["A comma seperated list of issue labels. These labels must exist on the repository or an error will be thrown. With Liquid support."]</span>
</div>

<style asp-name="codemirror"></style>
<script asp-name="codemirror" depends-on="admin" at="Foot"></script>
<script asp-name="codemirror-mode-javascript" at="Foot"></script>
<script asp-name="codemirror-addon-display-autorefresh" at="Foot"></script>
<script asp-name="codemirror-addon-mode-simple" at="Foot"></script>
<script asp-name="codemirror-addon-mode-multiplex" at="Foot"></script>
<script asp-name="codemirror-mode-xml" at="Foot"></script>

<script asp-src="~/OrchardCore.Liquid/codemirror/liquid.js" at="Foot"></script>

<script at="Foot">
    $(function () {
        var codeMirrorOptions = {
            autoRefresh: true,
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        };
        CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.Description)'), codeMirrorOptions);
});
</script>

