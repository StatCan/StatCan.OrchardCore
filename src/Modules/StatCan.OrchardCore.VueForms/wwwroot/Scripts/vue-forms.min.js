"use strict";function initForm(e){var i,a=null;VeeValidate.localize(e.dataset.lang);var t=e.dataset.script;t&&(a=new Function(atob(t))());i=a||new Vuetify,e.querySelectorAll("[data-vf-name]").forEach((function(e){var i=e.dataset.vfName,a=e.dataset.vfScript;if(a){var t=atob(a);new Function("\n        var component = ".concat(t,";\n        Object.assign(component, {name: '").concat(i,"', props: \n          ['obs-valid',\n          'obs-invalid',\n          'obs-reset',\n          'obs-validate',\n          'form-handle-submit',\n          'form-submitting',\n          'form-submit-success',\n          'form-success-message',\n          'form-submit-error',\n          'form-error-message']\n        });\n        return Vue.component('").concat(i,"', component);\n        "))()}})),new Vue({el:e,vuetify:i,data:function(){return{submitting:!1,submitSuccess:!1,successMessage:void 0,submitError:!1,errorMessage:void 0}},methods:{formHandleSubmit:function(e){var i=this;e.preventDefault(),Object.assign(this.$data,this.$options.data.apply(this));var a=this.$refs.obs;return a.validate().then((function(e){if(e){var t=i,r=t.$refs.form.$attrs.action,s=$("#"+t.$refs.form.$attrs.id).serialize();t.$data.submitting=!0,$.ajax({type:"POST",url:r,data:s,cache:!1,dataType:"json",success:function(e){if(Object.assign(t.$data,t.$options.data.apply(this)),e.validationError)return t.submitError=!0,t.errorMessage=e.errorMessage,void a.setErrors(e.errors);if(e.redirect)window.location.href=e.redirect;else{if(e.success)return t.submitSuccess=!0,void(t.successMessage=e.successMessage);t.submitError=!0,t.errorMessage="Something wen't wrong. Please report this to your site administrators. Error code: `VueForms.AjaxHandler`"}},error:function(e,i){Object.assign(t.$data,t.$options.data.apply(this)),t.submitError=!0,t.errorMessage="".concat(e.status," ").concat(i)}})}})),!1}}})}Vue.component("validation-provider",VeeValidate.ValidationProvider),Vue.component("validation-observer",VeeValidate.ValidationObserver),VeeValidate.localize({en:{code:"en",messages:{alpha:"The {_field_} field may only contain alphabetic characters",alpha_num:"The {_field_} field may only contain alpha-numeric characters",alpha_dash:"The {_field_} field may contain alpha-numeric characters as well as dashes and underscores",alpha_spaces:"The {_field_} field may only contain alphabetic characters as well as spaces",between:"The {_field_} field must be between {min} and {max}",confirmed:"The {_field_} field confirmation does not match",digits:"The {_field_} field must be numeric and exactly contain {length} digits",dimensions:"The {_field_} field must be {width} pixels by {height} pixels",email:"The {_field_} field must be a valid email",excluded:"The {_field_} field is not a valid value",ext:"The {_field_} field is not a valid file",image:"The {_field_} field must be an image",integer:"The {_field_} field must be an integer",length:"The {_field_} field must be {length} long",max_value:"The {_field_} field must be {max} or less",max:"The {_field_} field may not be greater than {length} characters",mimes:"The {_field_} field must have a valid file type",min_value:"The {_field_} field must be {min} or more",min:"The {_field_} field must be at least {length} characters",numeric:"The {_field_} field may only contain numeric characters",oneOf:"The {_field_} field is not a valid value",regex:"The {_field_} field format is invalid",required_if:"The {_field_} field is required",required:"The {_field_} field is required",size:"The {_field_} field size must be less than {size}KB"}},fr:{code:"fr",messages:{alpha:"Le champ {_field_} ne peut contenir que des lettres",alpha_num:"Le champ {_field_} ne peut contenir que des caractères alpha-numériques",alpha_dash:"Le champ {_field_} ne peut contenir que des caractères alpha-numériques, tirets ou soulignés",alpha_spaces:"Le champ {_field_} ne peut contenir que des lettres ou des espaces",between:"Le champ {_field_} doit être compris entre {min} et {max}",confirmed:"Le champ {_field_} ne correspond pas",digits:"Le champ {_field_} doit être un nombre entier de {length} chiffres",dimensions:"Le champ {_field_} doit avoir une taille de {width} pixels par {height} pixels",email:"Le champ {_field_} doit être une adresse e-mail valide",excluded:"Le champ {_field_} doit être une valeur valide",ext:"Le champ {_field_} doit être un fichier valide",image:"Le champ {_field_} doit être une image",integer:"Le champ {_field_} doit être un entier",length:"Le champ {_field_} doit contenir {length} caractères",max_value:"Le champ {_field_} doit avoir une valeur de {max} ou moins",max:"Le champ {_field_} ne peut pas contenir plus de {length} caractères",mimes:"Le champ {_field_} doit avoir un type MIME valide",min_value:"Le champ {_field_} doit avoir une valeur de {min} ou plus",min:"Le champ {_field_} doit contenir au minimum {length} caractères",numeric:"Le champ {_field_} ne peut contenir que des chiffres",oneOf:"Le champ {_field_} doit être une valeur valide",regex:"Le champ {_field_} est invalide",required:"Le champ {_field_} est obligatoire",required_if:"Le champ {_field_} est obligatoire lorsque {target} possède cette valeur",size:"Le champ {_field_} doit avoir un poids inférieur à {size}KB"}}}),document.querySelectorAll(".vue-form").forEach(initForm);
