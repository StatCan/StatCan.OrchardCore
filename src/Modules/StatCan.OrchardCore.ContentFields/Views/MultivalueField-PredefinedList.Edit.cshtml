@using StatCan.OrchardCore.ContentFields.Multivalue.Settings
@model StatCan.OrchardCore.ContentFields.Multivalue.ViewModels.EditMultivalueFieldViewModel

@{
  var settings = Model.PartFieldDefinition.GetSettings<MultivalueFieldSettings>();
  var listSettings = Model.PartFieldDefinition.GetSettings<MultivalueFieldEditorSettings>();

  var options = new List<SelectListItem>();
  //var selectedValues = String.IsNullOrEmpty(Model.Values) ? listSettings.DefaultValue : Model.Values;

  foreach (var option in listSettings.Options)
  {
    //var isSelected = option.Value == selectedValue
    // || (String.IsNullOrEmpty(option.Value) && String.IsNullOrEmpty(selectedValue));

    options.Add(new SelectListItem { Text = option.Name, Value = option.Value, Selected = false });
  }
}

<div class="form-group">

  @if (listSettings.Editor == StatCan.OrchardCore.ContentFields.Multivalue.Settings.EditorOption.Radio)
    {
    var i = 0;
    <label asp-for="Values">@Model.PartFieldDefinition.DisplayName()</label>
    @foreach (var option in options)
    {
    <div class="custom-control custom-radio" asp-for="Values">
    @Html.RadioButton("Text", option.Value, option.Selected, new { @class = "custom-control-input content-preview-text",
    id = Html.IdFor(m => m.Values) + "_" + i })
    <label class="custom-control-label" for="@(Html.IdFor(m => m.Values) + "_" + i)">@option.Text</label>
    </div>
    i++;
    }
    }

  @if (listSettings.Editor == StatCan.OrchardCore.ContentFields.Multivalue.Settings.EditorOption.Dropdown)
  {
    <label asp-for="Values">@Model.PartFieldDefinition.DisplayName()</label>
    <select class="form-control content-preview-select" asp-for="Values" asp-items="options"></select>
  }

    @if (!String.IsNullOrEmpty(settings.Hint))
  {
    <span class="hint">â€” @settings.Hint</span>
  }
</div>
