@using Microsoft.AspNetCore.Identity
@using OrchardCore.Entities
@using OrchardCore.Settings
@using OrchardCore.Users
@using OrchardCore.Users.Models
@model OrchardCore.Users.ViewModels.LoginViewModel
@inject SignInManager<IUser> SignInManager
@inject ISiteService SiteService
@inject UserManager<IUser> UserManager;
@{
    ViewLayout = "Layout__Login";

    var userCanRegister = (await SiteService.GetSiteSettingsAsync()).As<RegistrationSettings>().UsersCanRegister == UserRegistrationType.AllowRegistration;
    var allowResetPassword = (await SiteService.GetSiteSettingsAsync()).As<ResetPasswordSettings>().AllowResetPassword;
    var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
    var disableLocalLogin = (await SiteService.GetSiteSettingsAsync()).As<LoginSettings>().DisableLocalLogin;

    ViewData.ModelState.TryGetValue("UserName", out var userName);
    ViewData.ModelState.TryGetValue("Password", out var password);
}

<v-card class="px-4">
  <v-card-title>@T["Log In"]</v-card-title>
  <v-card-text>
  @if (!disableLocalLogin)
  {
    <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
      @if(ViewData.ModelState.ErrorCount > 0) 
      {
        <v-alert color="red" type="error">
         @foreach (var error in ViewData.ModelState.SelectMany(x => x.Value.Errors))
        {
          <span>@error.ErrorMessage</span>
        }
        </v-alert>
      }
      <v-row>
        <v-col cols="12">
          <v-text-field id="UserName" name="UserName" label="@T["Username"]" value="@userName?.AttemptedValue" error-messages="@(userName?.Errors.FirstOrDefault()?.ErrorMessage)"></v-text-field>
        </v-col>
        <v-col cols="12">
          <v-text-field id="Password" type="password" name="Password" label="@T["Password"]" error-messages="@(password?.Errors.FirstOrDefault()?.ErrorMessage)"></v-text-field>
        </v-col>
        <v-col cols="12">
          <v-checkbox name="RememberMe" label="@T["Remember me"]" value="true"></v-checkbox>
        </v-col>
        <v-col class="d-flex" cols="12" sm="6" xsm="12">
        </v-col>
        @await RenderSectionAsync("AfterLogin", required: false)
        <v-spacer></v-spacer>
        <v-col class="d-flex" cols="12" sm="3" xsm="12" align-self="center">
          <v-btn type="submit" x-large block color="success">@T["Log in"]</v-btn>
        </v-col>
          @if (allowResetPassword)
          {
            <div class="mt-3">
              <a asp-controller="ResetPassword" asp-action="ForgotPassword" class="label-link">@T["Forgot your password?"]</a>
            </div>
          }
          @if (userCanRegister)
          {
            <div class="mt-3">
              <a asp-controller="Registration" asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">@T["Register as a new user"]</a>
            </div>
          }
      </v-row>
    </form>
    }
    @if (loginProviders.Count > 0)
    {
      @* TODO *@
        <div class="col-md-6 @(disableLocalLogin ? "offset-md-3" : String.Empty)">
            <section>
                <h4>@T["Use another service to log in."]</h4>
                <hr />
                <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                    <div>
                        <p>
                            @foreach (var provider in loginProviders)
                            {
                                <button type="submit" class="btn btn-primary @(disableLocalLogin ? "w-100" : String.Empty)" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                @if (disableLocalLogin)
                                {
                                    <br />
                                }
                            }
                        </p>
                    </div>
                </form>
            </section>
        </div>
    }
  </v-card-text>
</v-card>