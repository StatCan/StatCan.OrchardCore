/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/

// Sets the cookie based on the current html lang. This is to avoid potential issues when landing on a french page.
document.cookie = '.AspNetCore.Culture=c%3D' + document.documentElement.lang + '%7Cuic%3D' + document.documentElement.lang + ';path=/';
(function ($) {
  "use strict"; // Start of use strict
  // Smooth scrolling using jQuery easing

  $('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function () {
    if (location.pathname.replace(/^\//, "") == this.pathname.replace(/^\//, "") && location.hostname == this.hostname) {
      var target = $(this.hash);
      target = target.length ? target : $("[name=" + this.hash.slice(1) + "]");

      if (target.length) {
        $("html, body").animate({
          scrollTop: target.offset().top - 54
        }, 1000, "easeInOutExpo");
        return false;
      }
    }
  });

  function getDocHeight() {
    var D = document;
    return Math.max(D.body.scrollHeight, D.documentElement.scrollHeight, D.body.offsetHeight, D.documentElement.offsetHeight, D.body.clientHeight, D.documentElement.clientHeight);
  }

  function animate(e) {
    var scroll = $(window).scrollTop();

    if (scroll + $(window).height() >= getDocHeight() - 75) {
      $('#mainFooter').removeClass("hide");
      $('#expandedFooter').removeClass("d-none").addClass("d-flex");
    } else if (scroll >= 5) {
      $('#mainHeader').addClass("hide");
      $('#mainFooter').addClass("hide");
      $('#expandedFooter').removeClass("d-none").addClass("d-flex");
    } else {
      $('#mainHeader').removeClass("hide");
      $('#mainFooter').removeClass("hide");
      $('#expandedFooter').addClass("d-none").removeClass("d-flex");
    }
  }

  $(window).on("load scroll resize", animate);
})(jQuery); // End of use strict
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldENvb2tpZS5qcyIsImhlYWRlci5qcyJdLCJuYW1lcyI6WyJkb2N1bWVudCIsImNvb2tpZSIsImRvY3VtZW50RWxlbWVudCIsImxhbmciLCIkIiwiY2xpY2siLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwicmVwbGFjZSIsImhvc3RuYW1lIiwidGFyZ2V0IiwiaGFzaCIsImxlbmd0aCIsInNsaWNlIiwiYW5pbWF0ZSIsInNjcm9sbFRvcCIsIm9mZnNldCIsInRvcCIsImdldERvY0hlaWdodCIsIkQiLCJNYXRoIiwibWF4IiwiYm9keSIsInNjcm9sbEhlaWdodCIsIm9mZnNldEhlaWdodCIsImNsaWVudEhlaWdodCIsImUiLCJzY3JvbGwiLCJ3aW5kb3ciLCJoZWlnaHQiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwib24iLCJqUXVlcnkiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQUEsUUFBUSxDQUFDQyxNQUFULEdBQWtCLDZCQUEyQkQsUUFBUSxDQUFDRSxlQUFULENBQXlCQyxJQUFwRCxHQUF5RCxXQUF6RCxHQUFxRUgsUUFBUSxDQUFDRSxlQUFULENBQXlCQyxJQUE5RixHQUFvRyxTQUF0SDtBQ0RBLENBQUMsVUFBU0MsQ0FBVCxFQUFZO0FBQ1gsZUFEVyxDQUNHO0FBRWQ7O0FBQ0FBLEVBQUFBLENBQUMsQ0FBQyxnREFBRCxDQUFELENBQW9EQyxLQUFwRCxDQUEwRCxZQUFXO0FBQ25FLFFBQ0VDLFFBQVEsQ0FBQ0MsUUFBVCxDQUFrQkMsT0FBbEIsQ0FBMEIsS0FBMUIsRUFBaUMsRUFBakMsS0FDRSxLQUFLRCxRQUFMLENBQWNDLE9BQWQsQ0FBc0IsS0FBdEIsRUFBNkIsRUFBN0IsQ0FERixJQUVBRixRQUFRLENBQUNHLFFBQVQsSUFBcUIsS0FBS0EsUUFINUIsRUFJRTtBQUNBLFVBQUlDLE1BQU0sR0FBR04sQ0FBQyxDQUFDLEtBQUtPLElBQU4sQ0FBZDtBQUNBRCxNQUFBQSxNQUFNLEdBQUdBLE1BQU0sQ0FBQ0UsTUFBUCxHQUFnQkYsTUFBaEIsR0FBeUJOLENBQUMsQ0FBQyxXQUFXLEtBQUtPLElBQUwsQ0FBVUUsS0FBVixDQUFnQixDQUFoQixDQUFYLEdBQWdDLEdBQWpDLENBQW5DOztBQUNBLFVBQUlILE1BQU0sQ0FBQ0UsTUFBWCxFQUFtQjtBQUNqQlIsUUFBQUEsQ0FBQyxDQUFDLFlBQUQsQ0FBRCxDQUFnQlUsT0FBaEIsQ0FDRTtBQUNFQyxVQUFBQSxTQUFTLEVBQUVMLE1BQU0sQ0FBQ00sTUFBUCxHQUFnQkMsR0FBaEIsR0FBc0I7QUFEbkMsU0FERixFQUlFLElBSkYsRUFLRSxlQUxGO0FBT0EsZUFBTyxLQUFQO0FBQ0Q7QUFDRjtBQUNGLEdBbkJEOztBQXFCQSxXQUFTQyxZQUFULEdBQXdCO0FBQ3RCLFFBQUlDLENBQUMsR0FBR25CLFFBQVI7QUFDQSxXQUFPb0IsSUFBSSxDQUFDQyxHQUFMLENBQ0hGLENBQUMsQ0FBQ0csSUFBRixDQUFPQyxZQURKLEVBQ2tCSixDQUFDLENBQUNqQixlQUFGLENBQWtCcUIsWUFEcEMsRUFFSEosQ0FBQyxDQUFDRyxJQUFGLENBQU9FLFlBRkosRUFFa0JMLENBQUMsQ0FBQ2pCLGVBQUYsQ0FBa0JzQixZQUZwQyxFQUdITCxDQUFDLENBQUNHLElBQUYsQ0FBT0csWUFISixFQUdrQk4sQ0FBQyxDQUFDakIsZUFBRixDQUFrQnVCLFlBSHBDLENBQVA7QUFLSDs7QUFFRCxXQUFTWCxPQUFULENBQWlCWSxDQUFqQixFQUFvQjtBQUNsQixRQUFJQyxNQUFNLEdBQUd2QixDQUFDLENBQUN3QixNQUFELENBQUQsQ0FBVWIsU0FBVixFQUFiOztBQUNBLFFBQUlZLE1BQU0sR0FBR3ZCLENBQUMsQ0FBQ3dCLE1BQUQsQ0FBRCxDQUFVQyxNQUFWLEVBQVQsSUFBK0JYLFlBQVksS0FBSyxFQUFwRCxFQUF3RDtBQUN0RGQsTUFBQUEsQ0FBQyxDQUFDLGFBQUQsQ0FBRCxDQUFpQjBCLFdBQWpCLENBQTZCLE1BQTdCO0FBQ0ExQixNQUFBQSxDQUFDLENBQUMsaUJBQUQsQ0FBRCxDQUFxQjBCLFdBQXJCLENBQWlDLFFBQWpDLEVBQTJDQyxRQUEzQyxDQUFvRCxRQUFwRDtBQUNELEtBSEQsTUFHTyxJQUFJSixNQUFNLElBQUksQ0FBZCxFQUFpQjtBQUN0QnZCLE1BQUFBLENBQUMsQ0FBQyxhQUFELENBQUQsQ0FBaUIyQixRQUFqQixDQUEwQixNQUExQjtBQUNBM0IsTUFBQUEsQ0FBQyxDQUFDLGFBQUQsQ0FBRCxDQUFpQjJCLFFBQWpCLENBQTBCLE1BQTFCO0FBQ0EzQixNQUFBQSxDQUFDLENBQUMsaUJBQUQsQ0FBRCxDQUFxQjBCLFdBQXJCLENBQWlDLFFBQWpDLEVBQTJDQyxRQUEzQyxDQUFvRCxRQUFwRDtBQUNELEtBSk0sTUFJQTtBQUNMM0IsTUFBQUEsQ0FBQyxDQUFDLGFBQUQsQ0FBRCxDQUFpQjBCLFdBQWpCLENBQTZCLE1BQTdCO0FBQ0ExQixNQUFBQSxDQUFDLENBQUMsYUFBRCxDQUFELENBQWlCMEIsV0FBakIsQ0FBNkIsTUFBN0I7QUFDQTFCLE1BQUFBLENBQUMsQ0FBQyxpQkFBRCxDQUFELENBQXFCMkIsUUFBckIsQ0FBOEIsUUFBOUIsRUFBd0NELFdBQXhDLENBQW9ELFFBQXBEO0FBQ0Q7QUFDRjs7QUFFRDFCLEVBQUFBLENBQUMsQ0FBQ3dCLE1BQUQsQ0FBRCxDQUFVSSxFQUFWLENBQWEsb0JBQWIsRUFBbUNsQixPQUFuQztBQUVDLENBcERELEVBb0RHbUIsTUFwREgsRSxDQW9EWSIsImZpbGUiOiJoYWNrYXRob24uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTZXRzIHRoZSBjb29raWUgYmFzZWQgb24gdGhlIGN1cnJlbnQgaHRtbCBsYW5nLiBUaGlzIGlzIHRvIGF2b2lkIHBvdGVudGlhbCBpc3N1ZXMgd2hlbiBsYW5kaW5nIG9uIGEgZnJlbmNoIHBhZ2UuXHJcbmRvY3VtZW50LmNvb2tpZSA9ICcuQXNwTmV0Q29yZS5DdWx0dXJlPWMlM0QnK2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5sYW5nKyclN0N1aWMlM0QnK2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5sYW5nICsnO3BhdGg9Lyc7XHJcbiIsIihmdW5jdGlvbigkKSB7XHJcbiAgXCJ1c2Ugc3RyaWN0XCI7IC8vIFN0YXJ0IG9mIHVzZSBzdHJpY3RcclxuXHJcbiAgLy8gU21vb3RoIHNjcm9sbGluZyB1c2luZyBqUXVlcnkgZWFzaW5nXHJcbiAgJCgnYS5qcy1zY3JvbGwtdHJpZ2dlcltocmVmKj1cIiNcIl06bm90KFtocmVmPVwiI1wiXSknKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgIGlmIChcclxuICAgICAgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXlxcLy8sIFwiXCIpID09XHJcbiAgICAgICAgdGhpcy5wYXRobmFtZS5yZXBsYWNlKC9eXFwvLywgXCJcIikgJiZcclxuICAgICAgbG9jYXRpb24uaG9zdG5hbWUgPT0gdGhpcy5ob3N0bmFtZVxyXG4gICAgKSB7XHJcbiAgICAgIHZhciB0YXJnZXQgPSAkKHRoaXMuaGFzaCk7XHJcbiAgICAgIHRhcmdldCA9IHRhcmdldC5sZW5ndGggPyB0YXJnZXQgOiAkKFwiW25hbWU9XCIgKyB0aGlzLmhhc2guc2xpY2UoMSkgKyBcIl1cIik7XHJcbiAgICAgIGlmICh0YXJnZXQubGVuZ3RoKSB7XHJcbiAgICAgICAgJChcImh0bWwsIGJvZHlcIikuYW5pbWF0ZShcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgc2Nyb2xsVG9wOiB0YXJnZXQub2Zmc2V0KCkudG9wIC0gNTRcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICAxMDAwLFxyXG4gICAgICAgICAgXCJlYXNlSW5PdXRFeHBvXCJcclxuICAgICAgICApO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICBmdW5jdGlvbiBnZXREb2NIZWlnaHQoKSB7XHJcbiAgICB2YXIgRCA9IGRvY3VtZW50O1xyXG4gICAgcmV0dXJuIE1hdGgubWF4KFxyXG4gICAgICAgIEQuYm9keS5zY3JvbGxIZWlnaHQsIEQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbEhlaWdodCxcclxuICAgICAgICBELmJvZHkub2Zmc2V0SGVpZ2h0LCBELmRvY3VtZW50RWxlbWVudC5vZmZzZXRIZWlnaHQsXHJcbiAgICAgICAgRC5ib2R5LmNsaWVudEhlaWdodCwgRC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0XHJcbiAgICApO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhbmltYXRlKGUpIHtcclxuICB2YXIgc2Nyb2xsID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xyXG4gIGlmIChzY3JvbGwgKyAkKHdpbmRvdykuaGVpZ2h0KCkgPj0gZ2V0RG9jSGVpZ2h0KCkgLSA3NSkge1xyXG4gICAgJCgnI21haW5Gb290ZXInKS5yZW1vdmVDbGFzcyhcImhpZGVcIik7XHJcbiAgICAkKCcjZXhwYW5kZWRGb290ZXInKS5yZW1vdmVDbGFzcyhcImQtbm9uZVwiKS5hZGRDbGFzcyhcImQtZmxleFwiKTtcclxuICB9IGVsc2UgaWYgKHNjcm9sbCA+PSA1KSB7XHJcbiAgICAkKCcjbWFpbkhlYWRlcicpLmFkZENsYXNzKFwiaGlkZVwiKTtcclxuICAgICQoJyNtYWluRm9vdGVyJykuYWRkQ2xhc3MoXCJoaWRlXCIpO1xyXG4gICAgJCgnI2V4cGFuZGVkRm9vdGVyJykucmVtb3ZlQ2xhc3MoXCJkLW5vbmVcIikuYWRkQ2xhc3MoXCJkLWZsZXhcIik7XHJcbiAgfSBlbHNlIHtcclxuICAgICQoJyNtYWluSGVhZGVyJykucmVtb3ZlQ2xhc3MoXCJoaWRlXCIpO1xyXG4gICAgJCgnI21haW5Gb290ZXInKS5yZW1vdmVDbGFzcyhcImhpZGVcIik7XHJcbiAgICAkKCcjZXhwYW5kZWRGb290ZXInKS5hZGRDbGFzcyhcImQtbm9uZVwiKS5yZW1vdmVDbGFzcyhcImQtZmxleFwiKVxyXG4gIH1cclxufVxyXG5cclxuJCh3aW5kb3cpLm9uKFwibG9hZCBzY3JvbGwgcmVzaXplXCIsIGFuaW1hdGUpO1xyXG5cclxufSkoalF1ZXJ5KTsgLy8gRW5kIG9mIHVzZSBzdHJpY3RcclxuIl19
